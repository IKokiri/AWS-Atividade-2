/*
 * Livraria Virtual
 *
 * Manipulação de livros e suas dependências 
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CarrinhoApiController : Controller
    { 
        /// <summary>
        /// Adiciona um livro no carrinho
        /// </summary>
        
        /// <param name="livroId">ID do livro</param>
        /// <param name="body">dados do livro que será adicionado ao carrinho</param>
        /// <response code="405">Dados inválidos</response>
        [HttpPost]
        [Route("/IKokiri/Livrariav/v1/livros/{livroId}/carrinho")]
        [ValidateModelState]
        [SwaggerOperation("AddLivroCarrinho")]
        public virtual IActionResult AddLivroCarrinho([FromRoute][Required]long? livroId, [FromBody]Livro body)
        { 
            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);


            throw new NotImplementedException();
        }

        /// <summary>
        /// Remoção de um livro do carrinho
        /// </summary>
        /// <remarks>Remove um livro do carrinho</remarks>
        /// <param name="livroId">identificador do livro que será removido do carrinho</param>
        /// <response code="400">Livro inválido</response>
        /// <response code="404">livro não está no carrinho encontrado</response>
        [HttpDelete]
        [Route("/IKokiri/Livrariav/v1/livros/{livroId}/carrinho")]
        [ValidateModelState]
        [SwaggerOperation("DeleteLivroCarrinho")]
        public virtual IActionResult DeleteLivroCarrinho([FromRoute][Required]int? livroId)
        { 
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);


            throw new NotImplementedException();
        }
    }
}
